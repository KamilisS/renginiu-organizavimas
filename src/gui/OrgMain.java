/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import com.toedter.calendar.JTextFieldDateEditor;
import common.Common;
import common.Event;
import common.Session;
import database.MSSQL;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.table.DefaultTableModel;
import com.itextpdf.text.pdf.PdfWriter;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.Document;
import com.itextpdf.text.Font;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.pdf.PdfPCell;
import common.PdfEvent;
import java.io.FileOutputStream;
import javax.swing.JOptionPane;

/**
 *
 * @author gvt48
 */
public class OrgMain extends javax.swing.JFrame {

    private Session session;
    private HashMap<String, String> filters;
    private ArrayList<Event> list;
    
    /**
     * Creates new form OrgMain
     */
    public OrgMain(Session session) {
        filters = new HashMap<>();
        filters.put("type", "Visi");
        filters.put("from", null);
        filters.put("to", null);
        filters.put("order", "Renginys.renginio_pradzia ASC");
        
        this.session = session;
        initComponents();
        this.nameLabel.setText(this.session.getName());
        this.moneyLabel.setText(Double.toString(this.session.getMoney()) + " EUR");
        this.setUpEventTypesDropdown();
        this.setUpOrderItemsDropdown();
        
        JTextFieldDateEditor editor = (JTextFieldDateEditor) this.fromDate.getDateEditor();
        editor.setEditable(false);
        this.fromDate.setDateFormatString("yyyy-MM-dd");
        editor = (JTextFieldDateEditor) this.toDate.getDateEditor();
        editor.setEditable(false);
        this.toDate.setDateFormatString("yyyy-MM-dd");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        nameLabel = new javax.swing.JLabel();
        moneyLabel = new javax.swing.JLabel();
        createEventBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        typeDropdown = new javax.swing.JComboBox<>();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel4 = new javax.swing.JLabel();
        fromDate = new com.toedter.calendar.JDateChooser();
        jLabel5 = new javax.swing.JLabel();
        toDate = new com.toedter.calendar.JDateChooser();
        jLabel6 = new javax.swing.JLabel();
        logOutBtn = new javax.swing.JButton();
        exitBtn = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        orderField = new javax.swing.JComboBox<>();
        generatePdfBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        nameLabel.setText("ddddddd");
        nameLabel.setFocusable(false);
        nameLabel.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        moneyLabel.setText("dddddd");
        moneyLabel.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        createEventBtn.setText("Sukurti renginį");
        createEventBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createEventBtnActionPerformed(evt);
            }
        });

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Pavadinimas", "Tipas", "Pradžia", "Pabaiga", "Dalyvių skaičius", "Amžiaus limitas", "Kaina", "Aprašymas"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table);

        jLabel1.setText("Jūsų renginiai:");

        jLabel2.setText("Rodyti pagal tipą:");

        typeDropdown.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        typeDropdown.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                typeDropdownItemStateChanged(evt);
            }
        });
        typeDropdown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                typeDropdownActionPerformed(evt);
            }
        });

        jLabel3.setText("Filtrai");

        jLabel4.setText("Nuo");

        fromDate.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                fromDateInputMethodTextChanged(evt);
            }
        });
        fromDate.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                fromDatePropertyChange(evt);
            }
        });

        jLabel5.setText("Iki");

        toDate.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                toDatePropertyChange(evt);
            }
        });

        jLabel6.setText("Rodyti pagal renginio pradžią");

        logOutBtn.setText("Atsijungti");
        logOutBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logOutBtnActionPerformed(evt);
            }
        });

        exitBtn.setText("Išjungti");
        exitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitBtnActionPerformed(evt);
            }
        });

        jLabel7.setText("Rikiuoti pagal");

        orderField.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        orderField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderFieldActionPerformed(evt);
            }
        });

        generatePdfBtn.setText("Generuoti pajamų ataskaitą");
        generatePdfBtn.setToolTipText("");
        generatePdfBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generatePdfBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 1194, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(createEventBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(logOutBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(exitBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(nameLabel))
                    .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(typeDropdown, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(fromDate, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addGap(99, 99, 99)
                                        .addComponent(jLabel7))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(toDate, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(orderField, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3))
                                .addGap(71, 71, 71)
                                .addComponent(jLabel6)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(generatePdfBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(moneyLabel)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(createEventBtn)
                        .addComponent(logOutBtn)
                        .addComponent(exitBtn))
                    .addComponent(nameLabel))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(moneyLabel)
                        .addGap(26, 26, 26))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(generatePdfBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel2)
                                .addComponent(jLabel4))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel5)
                                .addComponent(jLabel7)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(typeDropdown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(toDate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(orderField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(fromDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 227, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void createEventBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createEventBtnActionPerformed
        CreateEventDialog dialog = new CreateEventDialog(this, true, this.session);
        dialog.setTitle("Renginio kūrimas");
        dialog.setModal(true);
        dialog.pack();
        Common.center(dialog);
        dialog.setResizable(false);
        dialog.setVisible(true);
        this.refreshTable();
    }//GEN-LAST:event_createEventBtnActionPerformed

    private void typeDropdownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_typeDropdownActionPerformed
        if (this.typeDropdown.getSelectedItem() != null) {
            this.filters.put("type", this.typeDropdown.getSelectedItem().toString());
            this.refreshTable();
        }
    }//GEN-LAST:event_typeDropdownActionPerformed

    private void typeDropdownItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_typeDropdownItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_typeDropdownItemStateChanged

    private void fromDateInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_fromDateInputMethodTextChanged

    }//GEN-LAST:event_fromDateInputMethodTextChanged

    private void fromDatePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_fromDatePropertyChange
        if (this.fromDate.getDate() != null) {
            DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");  
            this.filters.put("from", dateFormat.format(this.fromDate.getDate()));
            this.refreshTable();
        }
    }//GEN-LAST:event_fromDatePropertyChange

    private void toDatePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_toDatePropertyChange
        if (this.toDate.getDate() != null) {
            DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");  
            this.filters.put("to", dateFormat.format(this.toDate.getDate()));
            this.refreshTable();
        }
    }//GEN-LAST:event_toDatePropertyChange

    private void logOutBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logOutBtnActionPerformed
        this.dispose();
        LoginMain loginMain = new LoginMain();
        Common.center(loginMain);
        loginMain.setTitle("Renginių organizavimo sistema");
        loginMain.setResizable(false);
        loginMain.setVisible(true);
    }//GEN-LAST:event_logOutBtnActionPerformed

    private void exitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitBtnActionPerformed
        this.dispose();
    }//GEN-LAST:event_exitBtnActionPerformed

    private void orderFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderFieldActionPerformed
        if (this.orderField.getSelectedItem() != null) {
            if (this.orderField.getSelectedItem().toString().contentEquals("Renginio pradžia (did)")) {
                this.filters.put("order", "Renginys.renginio_pradzia ASC");
            } else if (this.orderField.getSelectedItem().toString().contentEquals("Renginio pradžia (maž)")) {
                this.filters.put("order", "Renginys.renginio_pradzia DESC");                
            } else if (this.orderField.getSelectedItem().toString().contentEquals("Renginio tipas (did)")) {
                this.filters.put("order", "Renginiu_tipai.renginio_tipo_pav ASC");
            } else if (this.orderField.getSelectedItem().toString().contentEquals("Renginio tipas (maž)")) {
                this.filters.put("order", "Renginiu_tipai.renginio_tipo_pav DESC");
            } else if (this.orderField.getSelectedItem().toString().contentEquals("Renginio kaina (did)")) {
                this.filters.put("order", "Renginys.renginio_kaina ASC");
            } else if (this.orderField.getSelectedItem().toString().contentEquals("Renginio kaina (maž)")) {
                this.filters.put("order", "Renginys.renginio_kaina DESC");
            }
            this.refreshTable();
        }
    }//GEN-LAST:event_orderFieldActionPerformed

    private void tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseClicked
        int row = this.table.rowAtPoint(evt.getPoint());
        EditEventDialog dialog = new EditEventDialog(this, true, this.session, this.list.get(row));
        dialog.setTitle("Renginio redagavimas");
        dialog.setModal(true);
        dialog.pack();
        Common.center(dialog);
        dialog.setResizable(false);
        dialog.setVisible(true);
        this.refreshTable();
    }//GEN-LAST:event_tableMouseClicked

    private void generatePdfBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generatePdfBtnActionPerformed
        
        try {
            String pavadinimas = "C:\\Users\\gvt48\\Desktop\\ataskaita.pdf";
            Document doc = new Document();
            PdfWriter.getInstance(doc, new FileOutputStream(pavadinimas));
        
            doc.open();
            ArrayList<PdfEvent> events = new MSSQL().getOrganiserPdfEvents(this.session.getMyID(), this.filters);
            
            PdfPTable table = new PdfPTable(3);
            Font boldFont = new Font(Font.FontFamily.TIMES_ROMAN, 14, Font.BOLD);
            PdfPCell cell1 = new PdfPCell();
            Phrase firstCol = new Phrase("Renginio pavadinimas", boldFont);
            cell1.addElement(firstCol);
            PdfPCell cell2 = new PdfPCell();
            Phrase secCol = new Phrase("Renginio tipas", boldFont);
            cell2.addElement(secCol);
            PdfPCell cell3 = new PdfPCell();
            Phrase thirdCol = new Phrase("Renginio pajamos", boldFont);
            cell3.addElement(thirdCol);
            table.addCell(cell1);
            table.addCell(cell2);
            table.addCell(cell3);
            for (PdfEvent o : events) {
                table.addCell(o.getEventName());
                table.addCell(o.getEventTypeName());
                if (o.getMoneyEarned() == null) {
                    table.addCell("");
                } else {
                    table.addCell(Double.toString(o.getMoneyEarned()));
                }
            }
            doc.add(table);
            doc.close();
            
            JOptionPane.showMessageDialog(null,
                "Ataskaita sugeneruota!",
                null,
                JOptionPane.INFORMATION_MESSAGE);
        
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null,
                "Klaida generuojant ataskaitą!",
                null,
                JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_generatePdfBtnActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton createEventBtn;
    private javax.swing.JButton exitBtn;
    private com.toedter.calendar.JDateChooser fromDate;
    private javax.swing.JButton generatePdfBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JButton logOutBtn;
    private javax.swing.JLabel moneyLabel;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JComboBox<String> orderField;
    private javax.swing.JTable table;
    private com.toedter.calendar.JDateChooser toDate;
    private javax.swing.JComboBox<String> typeDropdown;
    // End of variables declaration//GEN-END:variables

    public void refreshTable() {
        list = new ArrayList<>();
        
        list = new MSSQL().getOrganiserEvents(this.session.getMyID(), filters);
        
        DefaultTableModel dm = (DefaultTableModel) this.table.getModel();
        int rowCount = dm.getRowCount();
        //Remove rows one by one from the end of the table
        for (int i = rowCount - 1; i >= 0; i--) {
            dm.removeRow(i);
        }
        
        DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm");  
        
        for (Event o : list) {
            String startTime = dateFormat.format(o.getStartsAt());
            String endTime = dateFormat.format(o.getEndsAt());
            
            String attendants = o.getAttendantsCount() + " / " + o.getMaxAmount();
            
            String[] row = {
                o.getName(),
                o.getEventTypeName(),
                startTime,
                endTime,
                attendants,
                o.getAgeLimit() == null ? null : Integer.toString(o.getAgeLimit()),
                o.getPrice() == null ? null : Double.toString(o.getPrice()),
                o.getDescription()
            };
            dm.addRow(row);
        }
    }
    
    private void setUpEventTypesDropdown() {
        ArrayList<String> names = new MSSQL().getAllEventTypeNames();
        this.typeDropdown.removeAllItems();
        this.typeDropdown.addItem("Visi");
        for (String o : names) {
            this.typeDropdown.addItem(o);
        }
    }
    
    private void setUpOrderItemsDropdown() {
        ArrayList<String> names = new ArrayList<>();
        names.add("Renginio pradžia (did)");
        names.add("Renginio pradžia (maž)");
        names.add("Renginio tipas (did)");
        names.add("Renginio tipas (maž)");
        names.add("Renginio kaina (did)");
        names.add("Renginio kaina (maž)");
        this.orderField.removeAllItems();
        for (String o : names) {
            this.orderField.addItem(o);
        }
    }
}
